const passport = require('passport');
const GoogleStrategy = require('passport-google-oauth20').Strategy;
const keys = require('../config/keys');
const mongoose = require('mongoose');

const User = mongoose.model('users');

passport.serializeUser((user, done) => {
  //user.is is not progile
  //it is id automaticallly generated by mongo
  done(null, user.id);
})

passport.deserializeUser((id, done) => {
  User.findById(id)
    .then(user => {
      done(null, user);
    })
});

passport.use(
  new GoogleStrategy({
    clientID:keys.googleClientID,
    clientSecret:keys.googleClientSecret,
    callbackURL: '/auth/google/callback',
    proxy: true
  },
  async (accessToken, refreshToken, profile, done) => {
        const existingUser = await User.findOne({ googleId: profile.id})

           if(existingUser){
             //user already exist
            return done(null, existingUser);
           }
             //create new record and save in mongodb using .save
             //user -> user creaed by mongo
          const user = await new User({googleId: profile.id}).save()
          done(null,user);
  })
);
